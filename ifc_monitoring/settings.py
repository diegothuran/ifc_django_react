"""
Django settings for ifc_monitoring project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-_@$m%x)76c09*%dm_ul==7o^tk63bsmk7w-*z7o*mj93*_hku=')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

# Configura√ß√£o de hosts permitidos
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '.onrender.com',  # Permite qualquer subdom√≠nio do Render
]

# Permite adicionar hosts via vari√°vel de ambiente (√∫til para deploy)
if os.getenv('ALLOWED_HOSTS'):
    ALLOWED_HOSTS.extend(os.getenv('ALLOWED_HOSTS').split(','))


# Application definition

INSTALLED_APPS = [
    # Unfold Admin (deve vir antes do django.contrib.admin)
    'unfold',
    'unfold.contrib.filters',
    'unfold.contrib.forms',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Terceiros
    'rest_framework',

    # Meus aplicativos
    'core',
    'plant_viewer',
    'sensor_management',
    'dashboard',
]

AUTH_USER_MODEL = 'core.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Para servir arquivos est√°ticos
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ifc_monitoring.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ifc_monitoring.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configura√ß√£o de banco condicional para desenvolvimento/produ√ß√£o
if os.getenv('DATABASE_URL'):
    DATABASES = {'default': dj_database_url.parse(os.getenv('DATABASE_URL'))}
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Cache Configuration
# https://docs.djangoproject.com/en/5.2/ref/settings/#caches
# Configura√ß√£o de cache usando PostgreSQL (banco de dados)
# Isso elimina a necessidade de Redis, usando apenas o banco existente
if os.getenv('DATABASE_URL'):
    # Produ√ß√£o: Cache em banco de dados (PostgreSQL no Render)
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
            'LOCATION': 'ifc_cache_table',  # Nome da tabela de cache
            'TIMEOUT': 3600 * 24 * 7,  # 7 dias
            'OPTIONS': {
                'MAX_ENTRIES': 1000,  # M√°ximo de entradas no cache
                'CULL_FREQUENCY': 3,  # Remove 1/3 das entradas quando atingir MAX_ENTRIES
            }
        }
    }
else:
    # Desenvolvimento: Cache em mem√≥ria (mais r√°pido para dev local)
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'unique-snowflake',
            'TIMEOUT': 3600 * 24,  # 1 dia
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'  # Barra inicial √© crucial para Render/produ√ß√£o
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Whitenoise configuration for better static files handling
# Nota: Usando CompressedStaticFilesStorage sem Manifest para evitar erros no Render
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedStaticFilesStorage" if not DEBUG else "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}

# Whitenoise settings para servir arquivos est√°ticos
WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = DEBUG

# Configura√ß√£o adicional para produ√ß√£o no Render
if not DEBUG:
    # For√ßa o uso do WhiteNoise para servir arquivos est√°ticos
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configura√ß√µes de arquivos de m√≠dia (para uploads de usu√°rios)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Django Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

# Configura√ß√µes espec√≠ficas para produ√ß√£o no Render
if not DEBUG:
    # Configura√ß√µes de seguran√ßa para produ√ß√£o
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    
    # Configura√ß√µes de sess√£o
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

# Configura√ß√£o de Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'core': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'plant_viewer': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'sensor_management': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'dashboard': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Configura√ß√£o de logging para produ√ß√£o (ap√≥s defini√ß√£o do LOGGING)
if not DEBUG:
    LOGGING['handlers']['file']['filename'] = '/tmp/django.log'

# ==================== UNFOLD ADMIN CONFIGURATION ====================

UNFOLD = {
    "SITE_TITLE": "IFC Monitoring System",
    "SITE_HEADER": "IFC Monitoring",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: "/static/images/logo-light.svg",
        "dark": lambda request: "/static/images/logo-dark.svg",
    },
    "SITE_LOGO": {
        "light": lambda request: "/static/images/logo-light.svg",
        "dark": lambda request: "/static/images/logo-dark.svg",
    },
    "SITE_SYMBOL": "cube",  # Material Symbols icon
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "IFC Monitoring System - Development" if DEBUG else "IFC Monitoring System - Production",
    "COLORS": {
        "primary": {
            "50": "239 246 255",
            "100": "219 234 254",
            "200": "191 219 254",
            "300": "147 197 253",
            "400": "96 165 250",
            "500": "59 130 246",
            "600": "37 99 235",
            "700": "29 78 216",
            "800": "30 64 175",
            "900": "30 58 138",
            "950": "23 37 84",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "üá¨üáß",
                "fr": "üá´üá∑",
                "nl": "üáßüá™",
                "pt": "üáµüáπ",
                "pt-br": "üáßüá∑",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": "Navega√ß√£o",
                "separator": True,
                "items": [
                    {
                        "title": "Dashboard",
                        "icon": "dashboard",
                        "link": "/admin/",
                    },
                    {
                        "title": "Dashboard P√∫blico",
                        "icon": "public",
                        "link": "/dashboard/",
                    },
                    {
                        "title": "Visualizador 3D",
                        "icon": "view_in_ar",
                        "link": "/plant/",
                    },
                ],
            },
            {
                "title": "Gest√£o de Plantas",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Plantas",
                        "icon": "apartment",
                        "link": "/admin/plant_viewer/buildingplan/",
                    },
                    {
                        "title": "Lista de Plantas",
                        "icon": "list",
                        "link": "/plant/plants/",
                    },
                ],
            },
            {
                "title": "Sensores & Monitoramento",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Sensores",
                        "icon": "sensors",
                        "link": "/admin/sensor_management/sensor/",
                    },
                    {
                        "title": "Dados dos Sensores",
                        "icon": "insights",
                        "link": "/admin/sensor_management/sensordata/",
                    },
                    {
                        "title": "Alertas",
                        "icon": "warning",
                        "link": "/admin/sensor_management/sensoralert/",
                    },
                    {
                        "title": "Dashboard Sensores",
                        "icon": "analytics",
                        "link": "/sensors/dashboard/",
                    },
                ],
            },
            {
                "title": "Administra√ß√£o",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Usu√°rios",
                        "icon": "people",
                        "link": "/admin/core/user/",
                    },
                    {
                        "title": "Grupos",
                        "icon": "group",
                        "link": "/admin/auth/group/",
                    },
                ],
            },
        ],
    },
}

